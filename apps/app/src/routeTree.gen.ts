/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutWorkflowsRouteImport } from './routes/_layout/workflows'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as LayoutWorkflowsIndexRouteImport } from './routes/_layout/workflows/index'
import { Route as LayoutQueuesIndexRouteImport } from './routes/_layout/queues/index'
import { Route as LayoutWorkflowsCreateRouteImport } from './routes/_layout/workflows/create'
import { Route as LayoutQueuesJobIdRouteImport } from './routes/_layout/queues/$jobId'
import { Route as LayoutWorkflowsWorkflowIdIndexRouteImport } from './routes/_layout/workflows/$workflowId/index'
import { Route as LayoutWorkflowsWorkflowIdViewRouteImport } from './routes/_layout/workflows/$workflowId/view'
import { Route as LayoutWorkflowsWorkflowIdRunsRouteImport } from './routes/_layout/workflows/$workflowId/runs'
import { Route as LayoutWorkflowsWorkflowIdItemsRouteImport } from './routes/_layout/workflows/$workflowId/items'
import { Route as LayoutWorkflowsWorkflowIdEditRouteImport } from './routes/_layout/workflows/$workflowId/edit'
import { Route as LayoutWorkflowsWorkflowIdRunsRunIdRouteImport } from './routes/_layout/workflows/$workflowId/runs/$runId'
import { Route as LayoutWorkflowsWorkflowIdItemsItemIdRouteImport } from './routes/_layout/workflows/$workflowId/items/$itemId'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutWorkflowsRoute = LayoutWorkflowsRouteImport.update({
  id: '/workflows',
  path: '/workflows',
  getParentRoute: () => LayoutRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authRouteRoute,
} as any)
const LayoutWorkflowsIndexRoute = LayoutWorkflowsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutWorkflowsRoute,
} as any)
const LayoutQueuesIndexRoute = LayoutQueuesIndexRouteImport.update({
  id: '/queues/',
  path: '/queues/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutWorkflowsCreateRoute = LayoutWorkflowsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => LayoutWorkflowsRoute,
} as any)
const LayoutQueuesJobIdRoute = LayoutQueuesJobIdRouteImport.update({
  id: '/queues/$jobId',
  path: '/queues/$jobId',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutWorkflowsWorkflowIdIndexRoute =
  LayoutWorkflowsWorkflowIdIndexRouteImport.update({
    id: '/$workflowId/',
    path: '/$workflowId/',
    getParentRoute: () => LayoutWorkflowsRoute,
  } as any)
const LayoutWorkflowsWorkflowIdViewRoute =
  LayoutWorkflowsWorkflowIdViewRouteImport.update({
    id: '/$workflowId/view',
    path: '/$workflowId/view',
    getParentRoute: () => LayoutWorkflowsRoute,
  } as any)
const LayoutWorkflowsWorkflowIdRunsRoute =
  LayoutWorkflowsWorkflowIdRunsRouteImport.update({
    id: '/$workflowId/runs',
    path: '/$workflowId/runs',
    getParentRoute: () => LayoutWorkflowsRoute,
  } as any)
const LayoutWorkflowsWorkflowIdItemsRoute =
  LayoutWorkflowsWorkflowIdItemsRouteImport.update({
    id: '/$workflowId/items',
    path: '/$workflowId/items',
    getParentRoute: () => LayoutWorkflowsRoute,
  } as any)
const LayoutWorkflowsWorkflowIdEditRoute =
  LayoutWorkflowsWorkflowIdEditRouteImport.update({
    id: '/$workflowId/edit',
    path: '/$workflowId/edit',
    getParentRoute: () => LayoutWorkflowsRoute,
  } as any)
const LayoutWorkflowsWorkflowIdRunsRunIdRoute =
  LayoutWorkflowsWorkflowIdRunsRunIdRouteImport.update({
    id: '/$runId',
    path: '/$runId',
    getParentRoute: () => LayoutWorkflowsWorkflowIdRunsRoute,
  } as any)
const LayoutWorkflowsWorkflowIdItemsItemIdRoute =
  LayoutWorkflowsWorkflowIdItemsItemIdRouteImport.update({
    id: '/$itemId',
    path: '/$itemId',
    getParentRoute: () => LayoutWorkflowsWorkflowIdItemsRoute,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof LayoutIndexRoute
  '/login': typeof authLoginRoute
  '/workflows': typeof LayoutWorkflowsRouteWithChildren
  '/queues/$jobId': typeof LayoutQueuesJobIdRoute
  '/workflows/create': typeof LayoutWorkflowsCreateRoute
  '/queues': typeof LayoutQueuesIndexRoute
  '/workflows/': typeof LayoutWorkflowsIndexRoute
  '/workflows/$workflowId/edit': typeof LayoutWorkflowsWorkflowIdEditRoute
  '/workflows/$workflowId/items': typeof LayoutWorkflowsWorkflowIdItemsRouteWithChildren
  '/workflows/$workflowId/runs': typeof LayoutWorkflowsWorkflowIdRunsRouteWithChildren
  '/workflows/$workflowId/view': typeof LayoutWorkflowsWorkflowIdViewRoute
  '/workflows/$workflowId': typeof LayoutWorkflowsWorkflowIdIndexRoute
  '/workflows/$workflowId/items/$itemId': typeof LayoutWorkflowsWorkflowIdItemsItemIdRoute
  '/workflows/$workflowId/runs/$runId': typeof LayoutWorkflowsWorkflowIdRunsRunIdRoute
}
export interface FileRoutesByTo {
  '/': typeof LayoutIndexRoute
  '/login': typeof authLoginRoute
  '/queues/$jobId': typeof LayoutQueuesJobIdRoute
  '/workflows/create': typeof LayoutWorkflowsCreateRoute
  '/queues': typeof LayoutQueuesIndexRoute
  '/workflows': typeof LayoutWorkflowsIndexRoute
  '/workflows/$workflowId/edit': typeof LayoutWorkflowsWorkflowIdEditRoute
  '/workflows/$workflowId/items': typeof LayoutWorkflowsWorkflowIdItemsRouteWithChildren
  '/workflows/$workflowId/runs': typeof LayoutWorkflowsWorkflowIdRunsRouteWithChildren
  '/workflows/$workflowId/view': typeof LayoutWorkflowsWorkflowIdViewRoute
  '/workflows/$workflowId': typeof LayoutWorkflowsWorkflowIdIndexRoute
  '/workflows/$workflowId/items/$itemId': typeof LayoutWorkflowsWorkflowIdItemsItemIdRoute
  '/workflows/$workflowId/runs/$runId': typeof LayoutWorkflowsWorkflowIdRunsRunIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(auth)': typeof authRouteRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/_layout/workflows': typeof LayoutWorkflowsRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/queues/$jobId': typeof LayoutQueuesJobIdRoute
  '/_layout/workflows/create': typeof LayoutWorkflowsCreateRoute
  '/_layout/queues/': typeof LayoutQueuesIndexRoute
  '/_layout/workflows/': typeof LayoutWorkflowsIndexRoute
  '/_layout/workflows/$workflowId/edit': typeof LayoutWorkflowsWorkflowIdEditRoute
  '/_layout/workflows/$workflowId/items': typeof LayoutWorkflowsWorkflowIdItemsRouteWithChildren
  '/_layout/workflows/$workflowId/runs': typeof LayoutWorkflowsWorkflowIdRunsRouteWithChildren
  '/_layout/workflows/$workflowId/view': typeof LayoutWorkflowsWorkflowIdViewRoute
  '/_layout/workflows/$workflowId/': typeof LayoutWorkflowsWorkflowIdIndexRoute
  '/_layout/workflows/$workflowId/items/$itemId': typeof LayoutWorkflowsWorkflowIdItemsItemIdRoute
  '/_layout/workflows/$workflowId/runs/$runId': typeof LayoutWorkflowsWorkflowIdRunsRunIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/workflows'
    | '/queues/$jobId'
    | '/workflows/create'
    | '/queues'
    | '/workflows/'
    | '/workflows/$workflowId/edit'
    | '/workflows/$workflowId/items'
    | '/workflows/$workflowId/runs'
    | '/workflows/$workflowId/view'
    | '/workflows/$workflowId'
    | '/workflows/$workflowId/items/$itemId'
    | '/workflows/$workflowId/runs/$runId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/queues/$jobId'
    | '/workflows/create'
    | '/queues'
    | '/workflows'
    | '/workflows/$workflowId/edit'
    | '/workflows/$workflowId/items'
    | '/workflows/$workflowId/runs'
    | '/workflows/$workflowId/view'
    | '/workflows/$workflowId'
    | '/workflows/$workflowId/items/$itemId'
    | '/workflows/$workflowId/runs/$runId'
  id:
    | '__root__'
    | '/(auth)'
    | '/_layout'
    | '/(auth)/login'
    | '/_layout/workflows'
    | '/_layout/'
    | '/_layout/queues/$jobId'
    | '/_layout/workflows/create'
    | '/_layout/queues/'
    | '/_layout/workflows/'
    | '/_layout/workflows/$workflowId/edit'
    | '/_layout/workflows/$workflowId/items'
    | '/_layout/workflows/$workflowId/runs'
    | '/_layout/workflows/$workflowId/view'
    | '/_layout/workflows/$workflowId/'
    | '/_layout/workflows/$workflowId/items/$itemId'
    | '/_layout/workflows/$workflowId/runs/$runId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/workflows': {
      id: '/_layout/workflows'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof LayoutWorkflowsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/_layout/workflows/': {
      id: '/_layout/workflows/'
      path: '/'
      fullPath: '/workflows/'
      preLoaderRoute: typeof LayoutWorkflowsIndexRouteImport
      parentRoute: typeof LayoutWorkflowsRoute
    }
    '/_layout/queues/': {
      id: '/_layout/queues/'
      path: '/queues'
      fullPath: '/queues'
      preLoaderRoute: typeof LayoutQueuesIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/workflows/create': {
      id: '/_layout/workflows/create'
      path: '/create'
      fullPath: '/workflows/create'
      preLoaderRoute: typeof LayoutWorkflowsCreateRouteImport
      parentRoute: typeof LayoutWorkflowsRoute
    }
    '/_layout/queues/$jobId': {
      id: '/_layout/queues/$jobId'
      path: '/queues/$jobId'
      fullPath: '/queues/$jobId'
      preLoaderRoute: typeof LayoutQueuesJobIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/workflows/$workflowId/': {
      id: '/_layout/workflows/$workflowId/'
      path: '/$workflowId'
      fullPath: '/workflows/$workflowId'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdIndexRouteImport
      parentRoute: typeof LayoutWorkflowsRoute
    }
    '/_layout/workflows/$workflowId/view': {
      id: '/_layout/workflows/$workflowId/view'
      path: '/$workflowId/view'
      fullPath: '/workflows/$workflowId/view'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdViewRouteImport
      parentRoute: typeof LayoutWorkflowsRoute
    }
    '/_layout/workflows/$workflowId/runs': {
      id: '/_layout/workflows/$workflowId/runs'
      path: '/$workflowId/runs'
      fullPath: '/workflows/$workflowId/runs'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdRunsRouteImport
      parentRoute: typeof LayoutWorkflowsRoute
    }
    '/_layout/workflows/$workflowId/items': {
      id: '/_layout/workflows/$workflowId/items'
      path: '/$workflowId/items'
      fullPath: '/workflows/$workflowId/items'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdItemsRouteImport
      parentRoute: typeof LayoutWorkflowsRoute
    }
    '/_layout/workflows/$workflowId/edit': {
      id: '/_layout/workflows/$workflowId/edit'
      path: '/$workflowId/edit'
      fullPath: '/workflows/$workflowId/edit'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdEditRouteImport
      parentRoute: typeof LayoutWorkflowsRoute
    }
    '/_layout/workflows/$workflowId/runs/$runId': {
      id: '/_layout/workflows/$workflowId/runs/$runId'
      path: '/$runId'
      fullPath: '/workflows/$workflowId/runs/$runId'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdRunsRunIdRouteImport
      parentRoute: typeof LayoutWorkflowsWorkflowIdRunsRoute
    }
    '/_layout/workflows/$workflowId/items/$itemId': {
      id: '/_layout/workflows/$workflowId/items/$itemId'
      path: '/$itemId'
      fullPath: '/workflows/$workflowId/items/$itemId'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdItemsItemIdRouteImport
      parentRoute: typeof LayoutWorkflowsWorkflowIdItemsRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface authRouteRouteChildren {
  authLoginRoute: typeof authLoginRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authLoginRoute: authLoginRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface LayoutWorkflowsWorkflowIdItemsRouteChildren {
  LayoutWorkflowsWorkflowIdItemsItemIdRoute: typeof LayoutWorkflowsWorkflowIdItemsItemIdRoute
}

const LayoutWorkflowsWorkflowIdItemsRouteChildren: LayoutWorkflowsWorkflowIdItemsRouteChildren =
  {
    LayoutWorkflowsWorkflowIdItemsItemIdRoute:
      LayoutWorkflowsWorkflowIdItemsItemIdRoute,
  }

const LayoutWorkflowsWorkflowIdItemsRouteWithChildren =
  LayoutWorkflowsWorkflowIdItemsRoute._addFileChildren(
    LayoutWorkflowsWorkflowIdItemsRouteChildren,
  )

interface LayoutWorkflowsWorkflowIdRunsRouteChildren {
  LayoutWorkflowsWorkflowIdRunsRunIdRoute: typeof LayoutWorkflowsWorkflowIdRunsRunIdRoute
}

const LayoutWorkflowsWorkflowIdRunsRouteChildren: LayoutWorkflowsWorkflowIdRunsRouteChildren =
  {
    LayoutWorkflowsWorkflowIdRunsRunIdRoute:
      LayoutWorkflowsWorkflowIdRunsRunIdRoute,
  }

const LayoutWorkflowsWorkflowIdRunsRouteWithChildren =
  LayoutWorkflowsWorkflowIdRunsRoute._addFileChildren(
    LayoutWorkflowsWorkflowIdRunsRouteChildren,
  )

interface LayoutWorkflowsRouteChildren {
  LayoutWorkflowsCreateRoute: typeof LayoutWorkflowsCreateRoute
  LayoutWorkflowsIndexRoute: typeof LayoutWorkflowsIndexRoute
  LayoutWorkflowsWorkflowIdEditRoute: typeof LayoutWorkflowsWorkflowIdEditRoute
  LayoutWorkflowsWorkflowIdItemsRoute: typeof LayoutWorkflowsWorkflowIdItemsRouteWithChildren
  LayoutWorkflowsWorkflowIdRunsRoute: typeof LayoutWorkflowsWorkflowIdRunsRouteWithChildren
  LayoutWorkflowsWorkflowIdViewRoute: typeof LayoutWorkflowsWorkflowIdViewRoute
  LayoutWorkflowsWorkflowIdIndexRoute: typeof LayoutWorkflowsWorkflowIdIndexRoute
}

const LayoutWorkflowsRouteChildren: LayoutWorkflowsRouteChildren = {
  LayoutWorkflowsCreateRoute: LayoutWorkflowsCreateRoute,
  LayoutWorkflowsIndexRoute: LayoutWorkflowsIndexRoute,
  LayoutWorkflowsWorkflowIdEditRoute: LayoutWorkflowsWorkflowIdEditRoute,
  LayoutWorkflowsWorkflowIdItemsRoute:
    LayoutWorkflowsWorkflowIdItemsRouteWithChildren,
  LayoutWorkflowsWorkflowIdRunsRoute:
    LayoutWorkflowsWorkflowIdRunsRouteWithChildren,
  LayoutWorkflowsWorkflowIdViewRoute: LayoutWorkflowsWorkflowIdViewRoute,
  LayoutWorkflowsWorkflowIdIndexRoute: LayoutWorkflowsWorkflowIdIndexRoute,
}

const LayoutWorkflowsRouteWithChildren = LayoutWorkflowsRoute._addFileChildren(
  LayoutWorkflowsRouteChildren,
)

interface LayoutRouteChildren {
  LayoutWorkflowsRoute: typeof LayoutWorkflowsRouteWithChildren
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutQueuesJobIdRoute: typeof LayoutQueuesJobIdRoute
  LayoutQueuesIndexRoute: typeof LayoutQueuesIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutWorkflowsRoute: LayoutWorkflowsRouteWithChildren,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutQueuesJobIdRoute: LayoutQueuesJobIdRoute,
  LayoutQueuesIndexRoute: LayoutQueuesIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
