/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as LayoutWorkflowsIndexRouteImport } from './routes/_layout/workflows/index'
import { Route as LayoutQueuesIndexRouteImport } from './routes/_layout/queues/index'
import { Route as LayoutWorkflowsWorkflowIdIndexRouteImport } from './routes/_layout/workflows/$workflowId/index'
import { Route as LayoutWorkflowsWorkflowIdRunsRouteImport } from './routes/_layout/workflows/$workflowId/runs'
import { Route as LayoutWorkflowsWorkflowIdItemsRouteImport } from './routes/_layout/workflows/$workflowId/items'
import { Route as LayoutWorkflowsWorkflowIdEditRouteImport } from './routes/_layout/workflows/$workflowId/edit'
import { Route as LayoutWorkflowsWorkflowIdLayoutRouteImport } from './routes/_layout/workflows/$workflowId/_layout'
import { Route as LayoutWorkflowsWorkflowIdRunsRunIdRouteImport } from './routes/_layout/workflows/$workflowId/runs/$runId'
import { Route as LayoutWorkflowsWorkflowIdItemsItemIdRouteImport } from './routes/_layout/workflows/$workflowId/items/$itemId'
import { Route as LayoutWorkflowsWorkflowIdRunsRunIdIndexRouteImport } from './routes/_layout/workflows/$workflowId/runs/$runId/index'
import { Route as LayoutWorkflowsWorkflowIdItemsItemIdIndexRouteImport } from './routes/_layout/workflows/$workflowId/items/$itemId/index'
import { ServerRoute as ApiSplatServerRouteImport } from './routes/api/$'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const LayoutWorkflowsWorkflowIdRouteImport = createFileRoute(
  '/_layout/workflows/$workflowId',
)()
const rootServerRouteImport = createServerRootRoute()

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authRouteRoute,
} as any)
const LayoutWorkflowsWorkflowIdRoute =
  LayoutWorkflowsWorkflowIdRouteImport.update({
    id: '/workflows/$workflowId',
    path: '/workflows/$workflowId',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutWorkflowsIndexRoute = LayoutWorkflowsIndexRouteImport.update({
  id: '/workflows/',
  path: '/workflows/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutQueuesIndexRoute = LayoutQueuesIndexRouteImport.update({
  id: '/queues/',
  path: '/queues/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutWorkflowsWorkflowIdIndexRoute =
  LayoutWorkflowsWorkflowIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutWorkflowsWorkflowIdRoute,
  } as any)
const LayoutWorkflowsWorkflowIdRunsRoute =
  LayoutWorkflowsWorkflowIdRunsRouteImport.update({
    id: '/runs',
    path: '/runs',
    getParentRoute: () => LayoutWorkflowsWorkflowIdRoute,
  } as any)
const LayoutWorkflowsWorkflowIdItemsRoute =
  LayoutWorkflowsWorkflowIdItemsRouteImport.update({
    id: '/items',
    path: '/items',
    getParentRoute: () => LayoutWorkflowsWorkflowIdRoute,
  } as any)
const LayoutWorkflowsWorkflowIdEditRoute =
  LayoutWorkflowsWorkflowIdEditRouteImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => LayoutWorkflowsWorkflowIdRoute,
  } as any)
const LayoutWorkflowsWorkflowIdLayoutRoute =
  LayoutWorkflowsWorkflowIdLayoutRouteImport.update({
    id: '/_layout',
    getParentRoute: () => LayoutWorkflowsWorkflowIdRoute,
  } as any)
const LayoutWorkflowsWorkflowIdRunsRunIdRoute =
  LayoutWorkflowsWorkflowIdRunsRunIdRouteImport.update({
    id: '/$runId',
    path: '/$runId',
    getParentRoute: () => LayoutWorkflowsWorkflowIdRunsRoute,
  } as any)
const LayoutWorkflowsWorkflowIdItemsItemIdRoute =
  LayoutWorkflowsWorkflowIdItemsItemIdRouteImport.update({
    id: '/$itemId',
    path: '/$itemId',
    getParentRoute: () => LayoutWorkflowsWorkflowIdItemsRoute,
  } as any)
const LayoutWorkflowsWorkflowIdRunsRunIdIndexRoute =
  LayoutWorkflowsWorkflowIdRunsRunIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutWorkflowsWorkflowIdRunsRunIdRoute,
  } as any)
const LayoutWorkflowsWorkflowIdItemsItemIdIndexRoute =
  LayoutWorkflowsWorkflowIdItemsItemIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutWorkflowsWorkflowIdItemsItemIdRoute,
  } as any)
const ApiSplatServerRoute = ApiSplatServerRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof LayoutIndexRoute
  '/login': typeof authLoginRoute
  '/queues': typeof LayoutQueuesIndexRoute
  '/workflows': typeof LayoutWorkflowsIndexRoute
  '/workflows/$workflowId': typeof LayoutWorkflowsWorkflowIdLayoutRoute
  '/workflows/$workflowId/edit': typeof LayoutWorkflowsWorkflowIdEditRoute
  '/workflows/$workflowId/items': typeof LayoutWorkflowsWorkflowIdItemsRouteWithChildren
  '/workflows/$workflowId/runs': typeof LayoutWorkflowsWorkflowIdRunsRouteWithChildren
  '/workflows/$workflowId/': typeof LayoutWorkflowsWorkflowIdIndexRoute
  '/workflows/$workflowId/items/$itemId': typeof LayoutWorkflowsWorkflowIdItemsItemIdRouteWithChildren
  '/workflows/$workflowId/runs/$runId': typeof LayoutWorkflowsWorkflowIdRunsRunIdRouteWithChildren
  '/workflows/$workflowId/items/$itemId/': typeof LayoutWorkflowsWorkflowIdItemsItemIdIndexRoute
  '/workflows/$workflowId/runs/$runId/': typeof LayoutWorkflowsWorkflowIdRunsRunIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof LayoutIndexRoute
  '/login': typeof authLoginRoute
  '/queues': typeof LayoutQueuesIndexRoute
  '/workflows': typeof LayoutWorkflowsIndexRoute
  '/workflows/$workflowId': typeof LayoutWorkflowsWorkflowIdIndexRoute
  '/workflows/$workflowId/edit': typeof LayoutWorkflowsWorkflowIdEditRoute
  '/workflows/$workflowId/items': typeof LayoutWorkflowsWorkflowIdItemsRouteWithChildren
  '/workflows/$workflowId/runs': typeof LayoutWorkflowsWorkflowIdRunsRouteWithChildren
  '/workflows/$workflowId/items/$itemId': typeof LayoutWorkflowsWorkflowIdItemsItemIdIndexRoute
  '/workflows/$workflowId/runs/$runId': typeof LayoutWorkflowsWorkflowIdRunsRunIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(auth)': typeof authRouteRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/queues/': typeof LayoutQueuesIndexRoute
  '/_layout/workflows/': typeof LayoutWorkflowsIndexRoute
  '/_layout/workflows/$workflowId': typeof LayoutWorkflowsWorkflowIdRouteWithChildren
  '/_layout/workflows/$workflowId/_layout': typeof LayoutWorkflowsWorkflowIdLayoutRoute
  '/_layout/workflows/$workflowId/edit': typeof LayoutWorkflowsWorkflowIdEditRoute
  '/_layout/workflows/$workflowId/items': typeof LayoutWorkflowsWorkflowIdItemsRouteWithChildren
  '/_layout/workflows/$workflowId/runs': typeof LayoutWorkflowsWorkflowIdRunsRouteWithChildren
  '/_layout/workflows/$workflowId/': typeof LayoutWorkflowsWorkflowIdIndexRoute
  '/_layout/workflows/$workflowId/items/$itemId': typeof LayoutWorkflowsWorkflowIdItemsItemIdRouteWithChildren
  '/_layout/workflows/$workflowId/runs/$runId': typeof LayoutWorkflowsWorkflowIdRunsRunIdRouteWithChildren
  '/_layout/workflows/$workflowId/items/$itemId/': typeof LayoutWorkflowsWorkflowIdItemsItemIdIndexRoute
  '/_layout/workflows/$workflowId/runs/$runId/': typeof LayoutWorkflowsWorkflowIdRunsRunIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/queues'
    | '/workflows'
    | '/workflows/$workflowId'
    | '/workflows/$workflowId/edit'
    | '/workflows/$workflowId/items'
    | '/workflows/$workflowId/runs'
    | '/workflows/$workflowId/'
    | '/workflows/$workflowId/items/$itemId'
    | '/workflows/$workflowId/runs/$runId'
    | '/workflows/$workflowId/items/$itemId/'
    | '/workflows/$workflowId/runs/$runId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/queues'
    | '/workflows'
    | '/workflows/$workflowId'
    | '/workflows/$workflowId/edit'
    | '/workflows/$workflowId/items'
    | '/workflows/$workflowId/runs'
    | '/workflows/$workflowId/items/$itemId'
    | '/workflows/$workflowId/runs/$runId'
  id:
    | '__root__'
    | '/(auth)'
    | '/_layout'
    | '/(auth)/login'
    | '/_layout/'
    | '/_layout/queues/'
    | '/_layout/workflows/'
    | '/_layout/workflows/$workflowId'
    | '/_layout/workflows/$workflowId/_layout'
    | '/_layout/workflows/$workflowId/edit'
    | '/_layout/workflows/$workflowId/items'
    | '/_layout/workflows/$workflowId/runs'
    | '/_layout/workflows/$workflowId/'
    | '/_layout/workflows/$workflowId/items/$itemId'
    | '/_layout/workflows/$workflowId/runs/$runId'
    | '/_layout/workflows/$workflowId/items/$itemId/'
    | '/_layout/workflows/$workflowId/runs/$runId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/$': typeof ApiSplatServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/$': typeof ApiSplatServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/$': typeof ApiSplatServerRoute
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/$' | '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/$' | '/api/auth/$'
  id: '__root__' | '/api/$' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiSplatServerRoute: typeof ApiSplatServerRoute
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/_layout/workflows/$workflowId': {
      id: '/_layout/workflows/$workflowId'
      path: '/workflows/$workflowId'
      fullPath: '/workflows/$workflowId'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/workflows/': {
      id: '/_layout/workflows/'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof LayoutWorkflowsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/queues/': {
      id: '/_layout/queues/'
      path: '/queues'
      fullPath: '/queues'
      preLoaderRoute: typeof LayoutQueuesIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/workflows/$workflowId/': {
      id: '/_layout/workflows/$workflowId/'
      path: '/'
      fullPath: '/workflows/$workflowId/'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdIndexRouteImport
      parentRoute: typeof LayoutWorkflowsWorkflowIdRoute
    }
    '/_layout/workflows/$workflowId/runs': {
      id: '/_layout/workflows/$workflowId/runs'
      path: '/runs'
      fullPath: '/workflows/$workflowId/runs'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdRunsRouteImport
      parentRoute: typeof LayoutWorkflowsWorkflowIdRoute
    }
    '/_layout/workflows/$workflowId/items': {
      id: '/_layout/workflows/$workflowId/items'
      path: '/items'
      fullPath: '/workflows/$workflowId/items'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdItemsRouteImport
      parentRoute: typeof LayoutWorkflowsWorkflowIdRoute
    }
    '/_layout/workflows/$workflowId/edit': {
      id: '/_layout/workflows/$workflowId/edit'
      path: '/edit'
      fullPath: '/workflows/$workflowId/edit'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdEditRouteImport
      parentRoute: typeof LayoutWorkflowsWorkflowIdRoute
    }
    '/_layout/workflows/$workflowId/_layout': {
      id: '/_layout/workflows/$workflowId/_layout'
      path: '/workflows/$workflowId'
      fullPath: '/workflows/$workflowId'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdLayoutRouteImport
      parentRoute: typeof LayoutWorkflowsWorkflowIdRoute
    }
    '/_layout/workflows/$workflowId/runs/$runId': {
      id: '/_layout/workflows/$workflowId/runs/$runId'
      path: '/$runId'
      fullPath: '/workflows/$workflowId/runs/$runId'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdRunsRunIdRouteImport
      parentRoute: typeof LayoutWorkflowsWorkflowIdRunsRoute
    }
    '/_layout/workflows/$workflowId/items/$itemId': {
      id: '/_layout/workflows/$workflowId/items/$itemId'
      path: '/$itemId'
      fullPath: '/workflows/$workflowId/items/$itemId'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdItemsItemIdRouteImport
      parentRoute: typeof LayoutWorkflowsWorkflowIdItemsRoute
    }
    '/_layout/workflows/$workflowId/runs/$runId/': {
      id: '/_layout/workflows/$workflowId/runs/$runId/'
      path: '/'
      fullPath: '/workflows/$workflowId/runs/$runId/'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdRunsRunIdIndexRouteImport
      parentRoute: typeof LayoutWorkflowsWorkflowIdRunsRunIdRoute
    }
    '/_layout/workflows/$workflowId/items/$itemId/': {
      id: '/_layout/workflows/$workflowId/items/$itemId/'
      path: '/'
      fullPath: '/workflows/$workflowId/items/$itemId/'
      preLoaderRoute: typeof LayoutWorkflowsWorkflowIdItemsItemIdIndexRouteImport
      parentRoute: typeof LayoutWorkflowsWorkflowIdItemsItemIdRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface authRouteRouteChildren {
  authLoginRoute: typeof authLoginRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authLoginRoute: authLoginRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface LayoutWorkflowsWorkflowIdItemsItemIdRouteChildren {
  LayoutWorkflowsWorkflowIdItemsItemIdIndexRoute: typeof LayoutWorkflowsWorkflowIdItemsItemIdIndexRoute
}

const LayoutWorkflowsWorkflowIdItemsItemIdRouteChildren: LayoutWorkflowsWorkflowIdItemsItemIdRouteChildren =
  {
    LayoutWorkflowsWorkflowIdItemsItemIdIndexRoute:
      LayoutWorkflowsWorkflowIdItemsItemIdIndexRoute,
  }

const LayoutWorkflowsWorkflowIdItemsItemIdRouteWithChildren =
  LayoutWorkflowsWorkflowIdItemsItemIdRoute._addFileChildren(
    LayoutWorkflowsWorkflowIdItemsItemIdRouteChildren,
  )

interface LayoutWorkflowsWorkflowIdItemsRouteChildren {
  LayoutWorkflowsWorkflowIdItemsItemIdRoute: typeof LayoutWorkflowsWorkflowIdItemsItemIdRouteWithChildren
}

const LayoutWorkflowsWorkflowIdItemsRouteChildren: LayoutWorkflowsWorkflowIdItemsRouteChildren =
  {
    LayoutWorkflowsWorkflowIdItemsItemIdRoute:
      LayoutWorkflowsWorkflowIdItemsItemIdRouteWithChildren,
  }

const LayoutWorkflowsWorkflowIdItemsRouteWithChildren =
  LayoutWorkflowsWorkflowIdItemsRoute._addFileChildren(
    LayoutWorkflowsWorkflowIdItemsRouteChildren,
  )

interface LayoutWorkflowsWorkflowIdRunsRunIdRouteChildren {
  LayoutWorkflowsWorkflowIdRunsRunIdIndexRoute: typeof LayoutWorkflowsWorkflowIdRunsRunIdIndexRoute
}

const LayoutWorkflowsWorkflowIdRunsRunIdRouteChildren: LayoutWorkflowsWorkflowIdRunsRunIdRouteChildren =
  {
    LayoutWorkflowsWorkflowIdRunsRunIdIndexRoute:
      LayoutWorkflowsWorkflowIdRunsRunIdIndexRoute,
  }

const LayoutWorkflowsWorkflowIdRunsRunIdRouteWithChildren =
  LayoutWorkflowsWorkflowIdRunsRunIdRoute._addFileChildren(
    LayoutWorkflowsWorkflowIdRunsRunIdRouteChildren,
  )

interface LayoutWorkflowsWorkflowIdRunsRouteChildren {
  LayoutWorkflowsWorkflowIdRunsRunIdRoute: typeof LayoutWorkflowsWorkflowIdRunsRunIdRouteWithChildren
}

const LayoutWorkflowsWorkflowIdRunsRouteChildren: LayoutWorkflowsWorkflowIdRunsRouteChildren =
  {
    LayoutWorkflowsWorkflowIdRunsRunIdRoute:
      LayoutWorkflowsWorkflowIdRunsRunIdRouteWithChildren,
  }

const LayoutWorkflowsWorkflowIdRunsRouteWithChildren =
  LayoutWorkflowsWorkflowIdRunsRoute._addFileChildren(
    LayoutWorkflowsWorkflowIdRunsRouteChildren,
  )

interface LayoutWorkflowsWorkflowIdRouteChildren {
  LayoutWorkflowsWorkflowIdLayoutRoute: typeof LayoutWorkflowsWorkflowIdLayoutRoute
  LayoutWorkflowsWorkflowIdEditRoute: typeof LayoutWorkflowsWorkflowIdEditRoute
  LayoutWorkflowsWorkflowIdItemsRoute: typeof LayoutWorkflowsWorkflowIdItemsRouteWithChildren
  LayoutWorkflowsWorkflowIdRunsRoute: typeof LayoutWorkflowsWorkflowIdRunsRouteWithChildren
  LayoutWorkflowsWorkflowIdIndexRoute: typeof LayoutWorkflowsWorkflowIdIndexRoute
}

const LayoutWorkflowsWorkflowIdRouteChildren: LayoutWorkflowsWorkflowIdRouteChildren =
  {
    LayoutWorkflowsWorkflowIdLayoutRoute: LayoutWorkflowsWorkflowIdLayoutRoute,
    LayoutWorkflowsWorkflowIdEditRoute: LayoutWorkflowsWorkflowIdEditRoute,
    LayoutWorkflowsWorkflowIdItemsRoute:
      LayoutWorkflowsWorkflowIdItemsRouteWithChildren,
    LayoutWorkflowsWorkflowIdRunsRoute:
      LayoutWorkflowsWorkflowIdRunsRouteWithChildren,
    LayoutWorkflowsWorkflowIdIndexRoute: LayoutWorkflowsWorkflowIdIndexRoute,
  }

const LayoutWorkflowsWorkflowIdRouteWithChildren =
  LayoutWorkflowsWorkflowIdRoute._addFileChildren(
    LayoutWorkflowsWorkflowIdRouteChildren,
  )

interface LayoutRouteChildren {
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutQueuesIndexRoute: typeof LayoutQueuesIndexRoute
  LayoutWorkflowsIndexRoute: typeof LayoutWorkflowsIndexRoute
  LayoutWorkflowsWorkflowIdRoute: typeof LayoutWorkflowsWorkflowIdRouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutQueuesIndexRoute: LayoutQueuesIndexRoute,
  LayoutWorkflowsIndexRoute: LayoutWorkflowsIndexRoute,
  LayoutWorkflowsWorkflowIdRoute: LayoutWorkflowsWorkflowIdRouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiSplatServerRoute: ApiSplatServerRoute,
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
